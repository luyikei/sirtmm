% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sirtmm.R
\name{sirtmm}
\alias{sirtmm}
\title{Item Parameter Estimation of Sequential Item Response Models for Multiple-Choice, Multiple-Attempt Test Items}
\usage{
sirtmm(
  data,
  k = NULL,
  mk = -1,
  itemtype = "SIRT-MM",
  quadpts = 15,
  tol = 1e-04,
  max_emsteps = 10,
  max_nriter = 50,
  lambda1 = 1,
  lambda2 = 1,
  lambda3 = 50,
  ngs = 1,
  nds = 0,
  verbose = FALSE,
  lasso = FALSE
)
}
\arguments{
\item{data}{A reponse matrix (number of attempts data).}

\item{k}{a number of answer options}

\item{mk}{a number of response categories (the max number of attempts + 1). -1 if answer-until-correct.}

\item{itemtype}{specify "SIRT-MMe" for an extended SIRT-MM model.}

\item{quadpts}{a number of quadrature points in the EM algorithm.}

\item{max_emsteps}{a maximum number of EM steps.}

\item{max_nriter}{a maximum number of iterations in the Newton's method.}

\item{lambda1}{a regularization penalty for gammma.}

\item{lambda2}{a regularization penalty for delta.}

\item{lambda3}{a regularization penalty for c (only used when SIRT-MMe is specified).}

\item{ngs}{a number of gammma parameters.}

\item{nds}{a number of delta parameters.}

\item{verbose}{output debug information during estimation.}

\item{lasso}{use LASSO instead of Ridge for regularization.}
}
\description{
sirtmm fits a SIRT-MM model to number of attempts data using marginal maximum likelihood estimation with an EM algorithm.
}
\examples{
data(mmdata)

mmdata3 <- mmdata

# Maximum number of attempts set to 3
mmdata3[mmdata3 == 4] <- 3

# Fit two models
mod1 <- sirtmm(mmdata3,
    k = 4, mk = 3, itemtype = "SIRT-MM",
    ngs = 1, nds = 0, lambda1 = 0.1,
    lasso = F, verbose = F, quadpts = 15
)
mod2 <- sirtmm(mmdata3,
    k = 4, mk = 3, itemtype = "SIRT-MM",
    ngs = 0, nds = 0, lambda1 = 0.1,
    lasso = F, verbose = F, quadpts = 15
)

# Print item parameter estimates
print(mod1$itempar)
print(mod2$itempar)


# Print model fit statistics
print(anova(mod1, mod2))

# Estimate theta
mod1_est <- estimate(mod1)
mod2_est <- estimate(mod2)

# Compare theta estimates between the two models
plot(mod1_est$thetas, mod2_est$thetas)
}
